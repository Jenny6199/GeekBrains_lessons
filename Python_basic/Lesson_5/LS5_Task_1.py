"""Author - Maksim Sapunov, msdir6199@gmail.com 20/01/2021"""

# Задача_1:  Создать программный файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных будет свидетельствовать пустая строка

# Решение
# 1. Блок импорта
import datetime as dt


# 2. Объявление функций


def get_data():
    """
    Функция получает данные от пользователя и упаковывает их в список
    :return: user_data: list - список с данными введенных пользователем
    """
    user_data = 'not_empty'  # Учитывая условия задачи при входе в цикл переменная не должна быть пустой строкой
    pack = []  # Создаем массив для сохранения данных пользователя
    print('Введите данные в строку ниже, по завершении ввода нажмите Enter')  # Оформление работы программы
    while user_data != '':  # Согласно условию задачи - выход из цикла ввод пустой строки
        user_data = input()
        print('Введите следующую строку. Для завершения ввода данных введите пустую строку')  # Визуальное оформление
        pack.append(user_data)  #
        pack.append('\n')
    print('Ввод данных заверен.')
    return pack


def save_data(data: list):
    """
    Функция принимает список и построчно записывает его в файл
    :param data: list - список с данными
    :return: info - сообщение о результате сохранения данных в файл
    """
    work_file = "training_file.txt"  # Указываем файл для сохранения данных
    print('----------\nПроизводится сохранение введенных данных')  # Визуальное оформление работы программы
    try:  # Обеспечиваем обработку ошибок записи в файл
        with open(work_file, 'a', encoding='UTF-8') as f_obj:
            # Для обеспечения аккуратной, "читабельной" записи в текстовый файл, с разделением записей
            f_obj.write(str(dt.datetime.utcnow()) + '\n')  # Указываем время записи
            f_obj.writelines(data)  # Передаем список строк введенных пользователем
            f_obj.write('\n----------\n')  # Передаем разделитель записей
            message = '----------\nУспех! Все данные сохранены в файл.'
    except IOError:
        message = 'Внимание!\nПроизошла ошибка ввода-вывода! Данные не сохранены!'
    finally:
        f_obj.close()
    print(message)
    return message


def show_data():
    """ Выводит на экран содержимое файла с ранее сохраненными данными"""
    try:
        with open('training_file.txt', 'r') as f_obj:
            content = f_obj.readlines()
            for value in content:
                print(value)
    except IOError:
        print('Не удалось открыть файл: ошибка!')
    finally:
        f_obj.close()
    return


def run():
    """ Start program"""
    choose = input('Вы хотите ввести новые данные в файл y/n? ')
    if choose == 'y':
        save_data(get_data())
    choose = input('Хотели бы вы просмотреть файл с данными y/n? ')
    if choose == 'y':
        show_data()


if __name__ == '__main__':
    run()

